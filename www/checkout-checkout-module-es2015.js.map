{"version":3,"sources":["./src/app/checkout/checkout.page.html","./src/app/checkout/checkout-routing.module.ts","./src/app/checkout/checkout.module.ts","./src/app/checkout/checkout.page.scss","./src/app/checkout/checkout.page.ts"],"names":[],"mappings":"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","file":"checkout-checkout-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n    <ion-title>Checkout</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item-divider color=\\\"danger\\\">Personal Details</ion-item-divider>\\n    <ion-item>\\n      <ion-label>First Name</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"newOrder.billing.first_name\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Last Name</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"newOrder.billing.last_name\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Email</ion-label>\\n      <ion-input readonly type=\\\"email\\\" [(ngModel)]=\\\"newOrder.email\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Username</ion-label>\\n      <ion-input readonly type=\\\"text\\\" [(ngModel)]=\\\"newOrder.username\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item-divider color=\\\"danger\\\">Billing Details</ion-item-divider>\\n\\n    <ion-item>\\n      <ion-label>Address Line 1</ion-label>\\n      <ion-textarea type=\\\"text\\\" maxlength=\\\"80\\\" [(ngModel)]=\\\"newOrder.billing.address_1\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Address Line 2</ion-label>\\n      <ion-textarea type=\\\"text\\\" maxlength=\\\"80\\\" [(ngModel)]=\\\"newOrder.billing.address_2\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Country</ion-label>\\n      <ion-select value=\\\"Philippines\\\" [(ngModel)]=\\\"newOrder.billing.country\\\">\\n        <ion-select-option value=\\\"Philippines\\\" selected=\\\"true\\\">Philippines</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>State</ion-label>\\n      <ion-select value=\\\"Metro Manila\\\" [(ngModel)]=\\\"newOrder.billing.state\\\">\\n        <ion-select-option value=\\\"Metro Manila\\\" selected=\\\"true\\\">Metro Manila</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>City</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"newOrder.billing.city\\\"></ion-input>        \\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Postal Code</ion-label>\\n      <ion-input type=\\\"number\\\" clearInput=\\\"true\\\" [(ngModel)]=\\\"newOrder.billing.postcode\\\"></ion-input>        \\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Phone</ion-label>\\n      <ion-input type=\\\"tel\\\" clearInput=\\\"true\\\" [(ngModel)]=\\\"newOrder.billing.phone\\\"></ion-input>        \\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Same Shipping Details</ion-label>\\n      <ion-checkbox (ionChange)=\\\"setBillingToShipping()\\\"></ion-checkbox>\\n    </ion-item>\\n\\n    <ion-item-divider color=\\\"danger\\\" *ngIf=\\\"!billing_shipping_same\\\">Shipping Details</ion-item-divider>\\n    \\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>First Name</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"newOrder.shipping.first_name\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>Last Name</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"newOrder.shipping.last_name\\\"></ion-input>\\n    </ion-item>\\n    \\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>Address Line 1</ion-label>\\n      <ion-textarea type=\\\"text\\\" maxlength=\\\"80\\\" [(ngModel)]=\\\"newOrder.shipping.address_1\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>Address Line 2</ion-label>\\n      <ion-textarea type=\\\"text\\\" maxlength=\\\"80\\\" [(ngModel)]=\\\"newOrder.shipping.address_2\\\"></ion-textarea>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>Country</ion-label>\\n      <ion-select value=\\\"Philippines\\\" [(ngModel)]=\\\"newOrder.shipping.country\\\">\\n        <ion-select-option value=\\\"Philippines\\\" selected=\\\"true\\\">Philippines</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>State</ion-label>\\n      <ion-select value=\\\"Metro Manila\\\" [(ngModel)]=\\\"newOrder.shipping.state\\\">\\n        <ion-select-option value=\\\"Metro Manila\\\" selected=\\\"true\\\">Metro Manila</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>City</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"newOrder.shipping.city\\\"></ion-input>        \\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>Postal Code</ion-label>\\n      <ion-input type=\\\"number\\\" clearInput=\\\"true\\\" [(ngModel)]=\\\"newOrder.shipping.postcode\\\"></ion-input>        \\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"!billing_shipping_same\\\">\\n      <ion-label>Phone</ion-label>\\n      <ion-input type=\\\"tel\\\" clearInput=\\\"true\\\" [(ngModel)]=\\\"newOrder.shipping.phone\\\"></ion-input>        \\n    </ion-item>\\n\\n    <ion-item-divider color=\\\"danger\\\">Payment Details</ion-item-divider>\\n\\n    <ion-item>\\n      <ion-label>Payment Method</ion-label>\\n      <ion-select [(ngModel)]=\\\"paymentMethod\\\">\\n        <ion-select-option *ngFor=\\\"let p of paymentMethods\\\" value=\\\"{{p.method_id}}\\\">{{ p.method_title }}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n\\n  </ion-list>\\n\\n</ion-content>\\n\\n<ion-footer>\\n<ion-button expand=\\\"block\\\" color=\\\"danger\\\" (click)=\\\"placeOrder()\\\">Place Order</ion-button>\\n</ion-footer>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CheckoutPage } from './checkout.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckoutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckoutPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckoutPageRoutingModule } from './checkout-routing.module';\n\nimport { CheckoutPage } from './checkout.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CheckoutPageRoutingModule\n  ],\n  declarations: [CheckoutPage]\n})\nexport class CheckoutPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoZWNrb3V0L2NoZWNrb3V0LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, AlertController, LoadingController } from '@ionic/angular';\nimport { HttpClient} from '@angular/common/http';\nimport { Storage } from '@ionic/storage';\nimport { PayPal, PayPalPayment, PayPalConfiguration } from '@ionic-native/paypal/ngx';\n\nimport { LinkService } from '../link.service';\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.page.html',\n  styleUrls: ['./checkout.page.scss'],\n})\nexport class CheckoutPage implements OnInit {\n\n  newOrder: any;\n  paymentMethods: any[];\n  paymentMethod: any;\n  billing_shipping_same: boolean;\n  userInfo: any;\n\n  customers_link = \"wp-json/wc/v3/customers\";\n  orders_link = \"wp-json/wc/v3/orders\";\n\n  email;\n  loaders = [null, null, null];\n\n  constructor(private payPal: PayPal, \n    private navController: NavController,\n    private storage: Storage, \n    private alertController: AlertController, \n    private httpClient: HttpClient,\n    private linkService: LinkService,\n    private loadingController: LoadingController) { \n      this.newOrder = {};\n      this.newOrder.billing = {};\n      this.newOrder.shipping = {};\n      this.billing_shipping_same = false;\n\n      this.paymentMethods = [\n        { method_id: \"bacs\", method_title: \"Direct Bank Transfer\" },\n        { method_id: \"cheque\", method_title: \"Cheque Payment\" },\n        { method_id: \"cod\", method_title: \"Cash on Delivery\" },\n        { method_id: \"paypal\", method_title: \"PayPal\" }];\n\n      this.storage.get(\"userLoginInfo\").then((userLoginInfo) => {\n        this.userInfo = userLoginInfo.user;\n        this.email = userLoginInfo.user.email;\n        let id = userLoginInfo.user.id;\n\n        this.presentLoader(0);\n        this.httpClient.get(this.linkService.getAPILink() + this.customers_link +'/' + id + '?consumer_key='+ this.linkService.getConsumerKey() + '&consumer_secret='+this.linkService.getConsumerSecret()).subscribe((data: any)=>{\n          this.dismissLoader(0);\n          this.newOrder = data;\n          console.log(this.newOrder);\n        },\n        (err)=>{\n          this.dismissLoader(0);\n          console.log(err);\n        });\n      })\n    }\n\n    async presentLoader(num) {\n      this.loaders[num] = await this.loadingController.create({\n        message: 'Please wait...'\n      });\n      await this.loaders[num].present();\n    }\n  \n    async dismissLoader(num) {\n      if(this.loaders[num]==null) return;\n        await this.loaders[num].dismiss()\n        .then(()=>{\n          this.loaders[num] = null;\n        })\n        .catch(e => console.log(e));\n    }\n  \n  setBillingToShipping() {\n    this.billing_shipping_same = !this.billing_shipping_same;\n    if (this.billing_shipping_same) {\n      this.newOrder.shipping = this.newOrder.billing;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  placeOrder() {\n\n    let orderItems: any[] = [];\n    let data: any = {};\n\n    let paymentData: any = {};\n\n    this.paymentMethods.forEach((element, index) => {\n      if (element.method_id == this.paymentMethod) {\n        paymentData = element;\n      }\n    });\n\n\n    data = {\n\n      //Fixed a bug here. Updated in accordance with wc/v2 API\n      payment_method: paymentData.method_id,\n      payment_method_title: paymentData.method_title,\n      set_paid: true,\n      status: \"processing\",\n\n      billing: this.newOrder.billing,\n      shipping: this.newOrder.shipping,\n      customer_id: this.userInfo.id || '',\n      line_items: orderItems\n    };\n\n    data.billing.email = this.email;\n    data.shipping.email = this.email;\n\n    data.billing.postcode = data.billing.postcode.toString() || '';\n    data.shipping.postcode = data.shipping.postcode.toString() || '';\n\n\n    if (paymentData.method_id == \"paypal\") {\n      \n      this.payPal.init({\n        PayPalEnvironmentProduction: \"YOUR_PRODUCTION_CLIENT_ID\",\n        PayPalEnvironmentSandbox: \"Ae8LguTbSvJCX2FAaph10eul1o14X9BmuEyeKGwxM7_pHndr42sCi1RTO2mn-29jMaVL4vrYNqqy5S2q\"\n      }).then(() => {\n        // Environments: PayPalEnvironmentNoNetwork, PayPalEnvironmentSandbox, PayPalEnvironmentProduction\n        this.payPal.prepareToRender('PayPalEnvironmentSandbox', new PayPalConfiguration({\n          // Only needed if you get an \"Internal Service Error\" after PayPal login!\n          //payPalShippingAddressOption: 2 // PayPalShippingAddressOptionPayPal\n        })).then(() => {\n\n          this.storage.get(\"cart\").then((cart) => {\n\n            let total = 0.00;\n            cart.forEach((element, index) => {\n\n              if(element.variation){\n                orderItems.push({ product_id: element.product.id, variation_id: element.variation.id, quantity: element.qty });\n                total = total + (element.variation.price * element.qty);\n              } else {\n                orderItems.push({ product_id: element.product.id, quantity: element.qty });\n                total = total + (element.product.price * element.qty);\n              }\n            });\n\n            let payment = new PayPalPayment(total.toString(), 'PHP', 'Description', 'sale');\n            this.payPal.renderSinglePaymentUI(payment).then((response) => {\n              // Successfully paid\n\n              //alert(JSON.stringify(response));\n\n\n              data.line_items = orderItems;\n              //console.log(data);\n              let orderData: any = {};\n\n              orderData.order = data;\n              this.presentLoader(1);\n              this.httpClient.post(this.linkService.getAPILink() + this.orders_link + '?consumer_key='+ this.linkService.getConsumerKey() + '&consumer_secret='+this.linkService.getConsumerSecret(), orderData.order).subscribe((data: any)=>{\n                this.dismissLoader(1); \n                console.log(data);\n                let response = data;\n          \n                this.presentAlert(\"Order Placed Successfully\", \"Your order has been placed successfully. Order#\" + response.id);\n              },\n              (err)=>{ \n                this.dismissLoader(1); \n                console.log(err);\n              });\n            })\n\n          }, () => {\n            // Error or render dialog closed without being successful\n          });\n        }, () => {\n          // Error in configuration\n        });\n      }, () => {\n        // Error in initialization, maybe PayPal isn't supported or something else\n      });\n      \n    } else {\n\n      this.storage.get(\"cart\").then((cart) => {\n\n        cart.forEach((element, index) => {\n          if(element.variation){\n            orderItems.push({ product_id: element.product.id, variation_id: element.variation.id, quantity: element.qty });\n            ///total = total + (element.variation.price * element.qty);\n          } else {\n            orderItems.push({ product_id: element.product.id, quantity: element.qty });\n            ///total = total + (element.product.price * element.qty);\n          }\n        });\n\n        data.line_items = orderItems;\n\n        let orderData: any = {};\n\n        orderData.order = data;\n        console.log(orderData.order);\n        this.presentLoader(2);\n        this.httpClient.post(this.linkService.getAPILink() + this.orders_link + '?consumer_key='+ this.linkService.getConsumerKey() + '&consumer_secret='+this.linkService.getConsumerSecret(), orderData.order).subscribe((data: any)=>{\n          this.dismissLoader(2); \n          console.log(data);\n          let response = data;\n    \n          this.presentAlert(\"Order Placed Successfully\", \"Your order has been placed successfully. Order#\" + response.id);\n        },\n        (err)=>{ \n          this.dismissLoader(2); \n          console.log(err);\n        });\n      })\n    }\n  }\n\n  async presentAlert(pHeader ,pMessage) {\n    const alert = await this.alertController.create({\n      header: pHeader,\n          message: pMessage,\n          buttons: [{\n            text: \"OK\",\n            handler: () => {\n              this.navController.navigateRoot(\"home\");\n            }\n          }]\n    });\n\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}